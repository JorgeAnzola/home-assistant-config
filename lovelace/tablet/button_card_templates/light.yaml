light:
  template:
    - base
    - circle
    - loader
  double_tap_action:
    action: fire-dom-event
    browser_mod:
      service: browser_mod.popup
      data:
        title: >
          [[[
            return !entity || entity.attributes.friendly_name;
          ]]]
        card_mod:
          style:
            #popup header
            .:
        content:
          type: entities
          card_mod:
            style: |
              #states {
                padding-top: 0.5em;
              }
          entities: >
            [[[
              if (entity) {
                  let lights = [],
                      id = [entity.entity_id]

                  for (let i = 0; i < id.length; i++) {
                      lights.push(
                      {
                        "type": "custom:light-popup-card",
                        "entity": id[i],
                        "icon": "none",
                        "fullscreen": false,
                        "brightnessWidth": "130px",
                        "brightnessHeight": "360px",
                        "borderRadius": "1.7em",
                        "sliderColor": "#c7c7c7",
                        "sliderTrackColor": "rgba(25, 25, 25, 0.9)",
                        "displayType": "slider",
                        "actionSize": "4.5em",
                        "actionsInARow": 2,
                        "hideState": true,
                        "sliderColoredByLight": true,
                        "actions": [
                          {
                            "action": "call-service",
                            "service": "light.turn_on",
                            "color": "#d8d9e1",
                            "service_data": {
                              "entity": id[i],
                              "color_temp": 153
                            }
                          },
                          {
                            "action": "call-service",
                            "service": "light.turn_on",
                            "color": "#d5b08d",
                            "service_data": {
                              "entity": id[i],
                              "color_temp": 326
                            }
                          },
                          {
                            "action": "call-service",
                            "service": "light.turn_on",
                            "color": "#ce944b",
                            "service_data": {
                              "entity": id[i],
                              "color_temp": 500
                            }
                          }
                        ]
                      });
                  }
                  return lights;
              }
            ]]]
  variables:
    circle_input: >
      [[[
        if (entity && entity.attributes.brightness) {
            // if light group get brightness from child to remove bounce
            let child = entity.attributes.entity_id,
                brightness = child && states[child[0]].attributes.brightness
                    ? Math.round(states[child[0]].attributes.brightness / 2.54)
                    : Math.round(entity.attributes.brightness / 2.54);
            return brightness === 0 && entity.state !== 'off'
                ? 1
                : brightness
        }
      ]]]
    circle_input_unit: "%"
